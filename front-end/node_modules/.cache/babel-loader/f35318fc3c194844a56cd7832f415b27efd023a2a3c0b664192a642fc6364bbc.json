{"ast":null,"code":"var _jsxFileName = \"/home/cba/Web-Dev/employee-management/front-end/src/components/EmployeeForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeForm() {\n  _s();\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeEmail, setEmployeeEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [department, setDepartment] = useState('');\n  const [dateOfJoining, setDateOfJoining] = useState('');\n  const [role, setRole] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      employeeName,\n      employeeEmail,\n      phoneNumber,\n      department,\n      dateOfJoining,\n      role\n    };\n    try {\n      const response = await axios.post('http://localhost:3001/addEmployee', data);\n      alert(response.data.message);\n    } catch (error) {\n      console.error('Error adding employee:', error);\n      alert('Error adding employee.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Employee Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: employeeName,\n        onChange: e => setEmployeeName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: employeeEmail,\n        onChange: e => setEmployeeEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Department:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: department,\n        onChange: e => setDepartment(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HR\",\n          children: \"HR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Engineering\",\n          children: \"Engineering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Marketing\",\n          children: \"Marketing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date of Joining:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dateOfJoining,\n        onChange: e => setDateOfJoining(e.target.value),\n        max: new Date().toISOString().split('T')[0],\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Role:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: role,\n        onChange: e => setRole(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeForm, \"ZbICiK6ogDbjBff9p7GWz8BBLL8=\");\n_c = EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EmployeeForm","_s","employeeName","setEmployeeName","employeeEmail","setEmployeeEmail","phoneNumber","setPhoneNumber","department","setDepartment","dateOfJoining","setDateOfJoining","role","setRole","handleSubmit","e","preventDefault","data","response","post","alert","message","error","console","onSubmit","children","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","max","Date","toISOString","split","_c","$RefreshReg$"],"sources":["/home/cba/Web-Dev/employee-management/front-end/src/components/EmployeeForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function EmployeeForm() {\n    const [employeeName, setEmployeeName] = useState('');\n    const [employeeEmail, setEmployeeEmail] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [department, setDepartment] = useState('');\n    const [dateOfJoining, setDateOfJoining] = useState('');\n    const [role, setRole] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const data = { employeeName, employeeEmail, phoneNumber, department, dateOfJoining, role };\n\n        try {\n            const response = await axios.post('http://localhost:3001/addEmployee', data);\n            alert(response.data.message);\n        } catch (error) {\n            console.error('Error adding employee:', error);\n            alert('Error adding employee.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Employee Name:\n                <input\n                    type=\"text\"\n                    value={employeeName}\n                    onChange={(e) => setEmployeeName(e.target.value)}\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Email:\n                <input\n                    type=\"email\"\n                    value={employeeEmail}\n                    onChange={(e) => setEmployeeEmail(e.target.value)}\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Phone Number:\n                <input\n                    type=\"number\"\n                    value={phoneNumber}\n                    onChange={(e) => setPhoneNumber(e.target.value)}\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Department:\n                <select value={department} onChange={(e) => setDepartment(e.target.value)} required>\n                    <option value=\"\">Select Department</option>\n                    <option value=\"HR\">HR</option>\n                    <option value=\"Engineering\">Engineering</option>\n                    <option value=\"Marketing\">Marketing</option>\n                </select>\n            </label>\n            <br />\n            <label>\n                Date of Joining:\n                <input\n                    type=\"date\"\n                    value={dateOfJoining}\n                    onChange={(e) => setDateOfJoining(e.target.value)}\n                    max={new Date().toISOString().split('T')[0]}\n                    required\n                />\n            </label>\n            <br />\n            <label>\n                Role:\n                <input\n                    type=\"text\"\n                    value={role}\n                    onChange={(e) => setRole(e.target.value)}\n                    required\n                />\n            </label>\n            <br />\n            <button type=\"submit\">Submit</button>\n        </form>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}