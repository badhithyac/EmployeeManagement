{"ast":null,"code":"var _jsxFileName = \"/home/cba/Web-Dev/employee-management/front-end/src/components/EmployeeForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeList() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n  // Fetch employees from the API\n  useEffect(() => {\n    axios.get('http://localhost:3001/employees').then(response => {\n      setEmployees(response.data);\n      setFilteredEmployees(response.data); // Initialize filtered list\n    }).catch(error => {\n      console.error('Error fetching employees:', error);\n    });\n  }, []);\n\n  // Handle search input\n  const handleSearch = event => {\n    const query = event.target.value.toLowerCase();\n    setSearchQuery(query);\n\n    // Filter employees by name or registration number (case insensitive)\n    const filtered = employees.filter(employee => employee.EmployeeName.toLowerCase().includes(query) || employee.EmployeeID.toLowerCase().includes(query));\n    setFilteredEmployees(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by Employee ID or Name\",\n      value: searchQuery,\n      onChange: handleSearch,\n      style: {\n        marginBottom: '20px',\n        padding: '5px',\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), filteredEmployees.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: '100%',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date of Joining\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.EmployeeID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.EmployeeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.PhoneNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(employee.DateOfJoining).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.Role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, employee.EmployeeID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No employees found matching the search criteria.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeeList, \"iAUNIRtXz1UiyhIxqemmFT7IFZg=\");\n_c = EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","searchQuery","setSearchQuery","filteredEmployees","setFilteredEmployees","get","then","response","data","catch","error","console","handleSearch","event","query","target","value","toLowerCase","filtered","filter","employee","EmployeeName","includes","EmployeeID","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","style","marginBottom","padding","width","length","border","textAlign","map","Email","PhoneNumber","Department","Date","DateOfJoining","toLocaleDateString","Role","_c","$RefreshReg$"],"sources":["/home/cba/Web-Dev/employee-management/front-end/src/components/EmployeeForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function EmployeeList() {\n    const [employees, setEmployees] = useState([]);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n    // Fetch employees from the API\n    useEffect(() => {\n        axios.get('http://localhost:3001/employees')\n            .then(response => {\n                setEmployees(response.data);\n                setFilteredEmployees(response.data); // Initialize filtered list\n            })\n            .catch(error => {\n                console.error('Error fetching employees:', error);\n            });\n    }, []);\n\n    // Handle search input\n    const handleSearch = (event) => {\n        const query = event.target.value.toLowerCase();\n        setSearchQuery(query);\n\n        // Filter employees by name or registration number (case insensitive)\n        const filtered = employees.filter(employee =>\n            employee.EmployeeName.toLowerCase().includes(query) ||\n            employee.EmployeeID.toLowerCase().includes(query)\n        );\n        setFilteredEmployees(filtered);\n    };\n\n    return (\n        <div>\n            <h2>Employee List</h2>\n\n            {/* Search Bar */}\n            <input\n                type=\"text\"\n                placeholder=\"Search by Employee ID or Name\"\n                value={searchQuery}\n                onChange={handleSearch}\n                style={{ marginBottom: '20px', padding: '5px', width: '300px' }}\n            />\n\n            {/* Employee Table */}\n            {filteredEmployees.length > 0 ? (\n                <table border=\"1\" style={{ width: '100%', textAlign: 'left' }}>\n                    <thead>\n                        <tr>\n                            <th>Employee ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Phone</th>\n                            <th>Department</th>\n                            <th>Date of Joining</th>\n                            <th>Role</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {filteredEmployees.map(employee => (\n                            <tr key={employee.EmployeeID}>\n                                <td>{employee.EmployeeID}</td>\n                                <td>{employee.EmployeeName}</td>\n                                <td>{employee.Email}</td>\n                                <td>{employee.PhoneNumber}</td>\n                                <td>{employee.Department}</td>\n                                <td>{new Date(employee.DateOfJoining).toLocaleDateString()}</td>\n                                <td>{employee.Role}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            ) : (\n                <p>No employees found matching the search criteria.</p>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}